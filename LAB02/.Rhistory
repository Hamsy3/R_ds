'MD', 'MA', 'MA', 'MA', 'MI', 'MI', 'MN', 'MS', 'MO',
'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NY', 'NY',
'NY', 'NC', 'NC', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA',
'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'VA',
'VA', 'WA', 'WA', 'WA', 'WA', 'WA', 'WV', 'WI', 'WY')
map_color <- clustering$cluster[map_order]
map('state', col = map_color, fill=TRUE)
library(maps)
map_order <- c('AL', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL',
'GA', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME',
'MD', 'MA', 'MA', 'MA', 'MI', 'MI', 'MN', 'MS', 'MO',
'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NY', 'NY',
'NY', 'NC', 'NC', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA',
'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'VA',
'VA', 'WA', 'WA', 'WA', 'WA', 'WA', 'WV', 'WI', 'WY')
map_color <- clustering$cluster[map_order]
map('state', col = map_color, fill=TRUE)
```{r}
```{r}
```{r}
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 2:5)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 2:5)
dist_mat1 <- dist(incomelog, method = 'euclidean')
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
rect.hclust(hclust_avg, k = 4, border = 1:3)
rect.hclust(hclust_avg, k = 4, border = 3:7)
rect.hclust(hclust_avg, k = 4, border = 2:5)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 2:5)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
plot(income_elec_state, col = hclust_avg$cluster)
points(clustering$centers, col = 1:k, pch = 8)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
plot(income_elec_state, col = hclust_avg$cluster)
points(hclust_avg$centers, col = 1:k, pch = 8)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
hclust_avg
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Кластеризация данных")
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 3:6)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 0:3)
rect.hclust(hclust_avg, k = 4, border = 1:4)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
plot(income_elec_state, col = clusters, main = "Кластеризация данных")
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Average")
plot(income_elec_state, col = hclust_avg$cluster)
points(hclust_avg$centers, col = 1:k, pch = 8)
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Average")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'complete')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Complete")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'single')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Complete")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'single')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Complete")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
```{r}
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Centroid")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Centroid")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
income_elec_state$income <- 10^(income_elec_state$income)
income_elec_state$elec <- 10^(income_elec_state$elec)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Average")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'complete')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Complete")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'single')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Single")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(income_elec_state, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(income_elec_state, col = clusters, main = "Centroid")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
log10_data <- income_elec_state
View(log10_data)
log10_data$income <- log10(income_elec_state$income)
log10_data$income <- log10(income_elec_state$income)
log10_data$income <- log10(income_elec_state$income)
log10_data$elec <- log10(income_elec_state$elec)
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(income_elec_state, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(income_elec_state, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
clustering <- kmeans(log10_data, centers = k)
wss <- numeric(15)
for (i in 1:15) wss[i] <- sum(kmeans(log10_data, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
View(outliers)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Average")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'complete')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Complete_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'single')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Single_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Centroid_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Average_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(outliers, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Average_out")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(outliers, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'average')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Average_out")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
```{r}
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'complete')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Complete_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(log10_data, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Centroid_log")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(outliers, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'complete')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Complete_out")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(outliers, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'single')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Single_out")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
dist_mat <- dist(outliers, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'centroid')
clusters <- cutree(hclust_avg, k = 4)
plot(log10_data, col = clusters, main = "Centroid_out")
plot(hclust_avg)
rect.hclust(hclust_avg, k = 4, border = 1:4)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
clustering <- kmeans(income_elec_state, centers = k)
plot(income_elec_state, col = clustering$cluster)
points(clustering$centers, col = 1:k, pch = 8)
train <- head(items, 8000)
test <- tail(items, 2000)
rulestr <-apriori(data, parameter = list(supp = 0.01, conf = 0,target = "rulestr", maxlen=25))
library('arules')
library('arulesViz')
data <-read.transactions ("AssociationRules.csv",rm.duplicates = FALSE,format="basket",sep=" ",cols=NULL)
train <- head(items, 8000)
test <- tail(items, 2000)
rulestr <-apriori(data, parameter = list(supp = 0.01, conf = 0,target = "rulestr", maxlen=25))
train <- head(items, 8000)
test <- tail(items, 2000)
rulestr <-apriori(train, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
rain <- head(items, 8000)
test <- tail(items, 2000)
rulestr <-apriori(train, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
View(data)
train <- head(data, 8000)
test <- tail(data, 2000)
rulestr <-apriori(train, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
rulests <-apriori(test, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
intersect(rulestr, rilests)
inter <- intersect(rulestr,rulests)
int <- intersect(rulestr, rilests)
int <- intersect(rulestr, rulests)
inspect(r)
inspect(int)
inspect(rulestr)
inspect(rulests)
plot(high, method="graph", engine='igraph')
high <- head(sort(rules, by="lift"), 3)
ules <-apriori(data, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
#11524
rules <-apriori(data, parameter = list(supp = 0.01, conf = 0.5,target = "rules", maxlen=25))
plot(rules, control = list(jitter =2)
lot(rules, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
plot(rules, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
subrules <- rules[quality(rules)$confidence > 0.8]
plot(subrules, control = list(jitter = 2))
inspect(subrules)
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift1, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), shading = c("lift","confidence"))
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
train <- head(data, 8000)
test <- tail(data, 2000)
rulestr <-apriori(train, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
rulests <-apriori(test, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
int <- intersect(rulestr, rulests)
inspect(rulestr)
inspect(rulests)
