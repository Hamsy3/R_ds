ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
library(ggplot2)
library(ggplot2)
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
```{r}
---
title: "lab2-3"
```{r}
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
tail(lab1, n=10)
dim(lab1)
typeof(lab1)
class(lab1)
colnames(lab1) <- c("zipCode", "income")
head(lab1, n=10)
summary(lab1)
sd(lab1$income)
library(ggplot2)
ggplot(data = lab1, aes(x = zipCode, y = income)) + geom_point()
plot(lab1$zipCode, lab1$income, xlab = "zipCode", ylab="income")
outlier_lab <- lab1[lab1$income > 7000 & lab1$income < 200000, ]
summary(outlier_lab)
ggplot(data = outlier_lab, aes(x = zipCode, y = income, group = zipCode)) +
geom_boxplot() +
labs(title = "Average Household Income by Zip Code", x = "Zip Codes", y = "Income")
boxplot(outlier_lab$income ~ as.factor(outlier_lab$zipCode), main = "Average Household Income by Zip Code", xlab = "Zip Codes", ylab = "Income")
boxplot(outlier_lab$income ~ as.factor(outlier_lab$zipCode), main = "Average Household Income by Zip Code", xlab = "Zip Codes", ylab = "Income", log="y")
ggplot(data = outlier_lab, aes(x = zipCode, y = income)) +
geom_point(position = "jitter", alpha = 0.2) +
scale_y_log10() +
labs(title = "Scatter Plot of Log Income by Zip Code", x = "Zip Code", y = "Log Income")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
View(outlier_lab)
View(outlier_lab)
data <-read.csv("zeta.csv", header=TRUE)
View(outlier_lab)
View(lab1)
View(lab1)
View(lab1)
View(outlier_lab)
head(data)
head(data)
dim(data)
data[!unique()]
data[!unique(data)]
data[!unique(data), ]
data[!duplicted(data)]
data[!duplicated(data)]
data[!duplicated(data), ]
dim(data)
data[!duplicated(data$meanhouseholdincome), ]
data_unique <- data[!duplicated(data$meanhouseholdincome), ]
data_unique$sex
unique(data_unique$sex)
count(unique(data_unique))
unique(data_unique)
unique(data_unique$meanhouseholdincome)
dim(data_unique)
dim(data_unique$meanhouseholdincome)
length(unique(data$meanhouseholdincome))
dim(data_unique$meanhouseholdincome)
head(data)
data_col <- data_unique[, -2-3]
head(data_col)
data_col <- data_unique[, -2]
head(data_col)
data_col <- data_unique[, -с(2,3)]
data_col <- data_unique[, -c(2,3)]
head(data_col)
data_without_out <- subset(data_col, data_col$meaneducation > 8 & data_col$meaneducation < 18 &
data_col$meanhouseholdincome > 10000 & data_col$meanhouseholdincome < 200000 &
data_col$meanemployment > 0 & data_col$meanemployment < 3 &
data_col$meanage > 20 & data_col$meanage < 60)
summary(data_without_out)
data_without_log <- data_without_out[log10(data_without_out$meanhouseholdincome)]
head(data_without_log)
data_without_log <- data_without_out
data__log <- data_without_out
head(data_log)
data_log <- data_without_out
head(data_log)
View(data__log)
data_log <- data_without_out
data_log$meanhouseholdincome <- log10(data_log$meanhouseholdincome)
head(data_log)
df <- read.csv("zeta.csv", header=TRUE)
```{r}
df <- read.csv("zeta.csv", header=TRUE)
df <- df[!duplicated(df$meanhouseholdincome),]
df <- df[, -2:-3]
df <- subset(df, df$meaneducation >8 & df$meaneducation < 18 & df$meanhouseholdincome >10000 & df$meanhouseholdincome < 200000 & df$meanemployment >0 & df$meanemployment < 3 & df$meanage > 20 & df$meanage < 60)
summary(df)
names(df) <- c('X','age', 'education', 'emplyment', 'meanhouseholincome')
df$log_income <- log10(df$meanhouseholincome)
head(df)
head(data_log)
names(data_log) <- c('X', 'age', 'education', 'employment', 'meanhouseholdincome')
head(data_log)
library(ggplot2)
library(ggplot2)
plot(data_log$meanhouseholdincome, data_log$age)
library(ggplot2)
ggplot(data = data_log, aes(x=data_log$age, y = data_log$log_income)) + geom_point() + geom_hex() + ggtitle("Effect of age on log_income") +xlab("age") + ylab("log_income")
library(ggplot2)
ggplot(data = data_log, aes(x=data_log$age, y = data_log$meanhouseholdincome)) + geom_point() + geom_hex() + ggtitle("Effect of age on log_income") +xlab("age") + ylab("log_income")
linr <- lm(data_log$meanhouseholdincome ~ data_log$age)
str(linr)
print(linr)
par(mfrow=c(2,2))
plot(linr)
summary(linr)
ggplot(data = data_log, aes(x=data_log$education, y = data_log$meanhouseholdincome)) + geom_point() + geom_hex() + ggtitle("Effect of education on log_income" + xlab("education") + ylab("log_income"))
ggplot(data = data_log, aes(x=data_log$education, y = data_log$meanhouseholdincome)) + geom_point() + geom_hex() + ggtitle("Effect of education on log_income") + xlab("education") + ylab("log_income")
linr_ed <- lm(data_log$meanhouseholdincome ~ data_log$education)
summary(linr_ed)
linr_mult <- lm(data_log$meanhouseholdincome ~ data_log$age, data_log$education, data_log$employment)
linr_ed <- lm(data_log$meanhouseholdincome ~ data_log$education)
summary(linr_ed)
linr_mult <- lm(data_log$meanhouseholdincome ~ data_log$age + data_log$education + data_log$employment)
summary(linr_mult)
setwd(~/LAB04)
setwd(~/LAB04)
df <- read.csv("zeta.csv", header=TRUE)
data <-read.csv("zeta.csv", header=TRUE)
df <- read.csv("zeta.csv", header=TRUE)
getwd()
df <- read.csv("zeta.csv", header=TRUE)
getwd()
df <-data
df <- read.csv("zeta.csv", header=TRUE)
df <-data
#df <- read.csv("zeta.csv", header=TRUE)
df <- df[!duplicated(df$meanhouseholdincome),]
df <- df[, -2:-3]
df <- subset(df, df$meaneducation >8 & df$meaneducation < 18 & df$meanhouseholdincome >10000 & df$meanhouseholdincome < 200000 & df$meanemployment >0 & df$meanemployment < 3 & df$meanage > 20 & df$meanage < 60)
summary(df)
names(df) <- c('X','age', 'education', 'emplyment', 'meanhouseholincome')
df$log_income <- log10(df$meanhouseholincome)
library(ggplot2)
library(plotly)
plot(df$age, df$log_income, main = 'effect of age on log_income', xlab='age', ylab='log_income')
ggplot(data = df, aes(x=df$age, y = df$log_income)) + geom_point() + geom_hex() + ggtitle("effect of age on log_income") +xlab("age") + ylab("log_income")
lmA = lm(df$log_income~df$age, data = df)
summary(lmA)
plot(df$age, df$log_income, main = 'effect of age on log_income', xlab='age', ylab='log_income')
abline(lmA, col ='red')
plot(df$education, df$log_income, main = 'effect of education on log_income', xlab='education', ylab='log_income')
lmE = lm(df$log_income~df$education, data = df)
abline(lmE, col ='red')
summary(lmE)
summary.aov(lmE)
ss.total <- sum((df$log_income-mean(df$log_income))^2)
sd <- sqrt(ss.total/mean(df$log_income))
se <- sd/sqrt(nrow(df))
lmAEE = lm(df$log_income~df$education +df$age +df$emplyment, data = df)
summary(lmAEE)
plot(df$log_income, linr_multE$fitted.values, ylab = "predicted", xlab = "true", main = "log_income")
plot(data_log$meanhouseholdincome, linr_multE$fitted.values, ylab = "predicted", xlab = "true", main = "log_income")
plot(data_log$meanhouseholdincome, linr_mult$fitted.values, ylab = "predicted", xlab = "true", main = "log_income")
plot(data_log$meanhouseholdincome, linr_mult$fitted.values, ylab = "predicted", xlab = "true", main = "log_income")
abline(a =0, b =1, col='red')
ggplot(data_log, aes(data_log$meanhouseholdincome, linr_mult$fitted.values)) + geom_point() + geom_hex() + xlab
ggplot(data_log, aes(data_log$meanhouseholdincome, linr_mult$fitted.values)) + geom_point() + geom_hex() + xlab("real") + ylab("predicted") + ggtitle("mult_reg") + geom_abline(slope=1, intercept = 0, colour=red)
ggplot(data_log, aes(data_log$meanhouseholdincome, linr_mult$fitted.values)) + geom_point() + geom_hex() + xlab("real") + ylab("predicted") + ggtitle("mult_reg") + geom_abline(slope=1, intercept = 0, colour="red")
{r}
setwd(~/LAB06)
setwd(/hamsy/LAB06)
setwd(LAB06)
setwd(~LAB06)
setwd("~/LAB06")
install.packages("e1071")
data <-read.csv("nbtrain.csv", header=TRUE)
head(data)
dim(data)
train_data <- data[1:9010,]
head(train_data)
dim(train_data)
test_data <- data[9011:,]
test_data <- data[:9011,]
dim(data)
test_data <- data[9011:10010,]
print(dim(train_data), dim(test_data), dim(data))
print(dim(train_data))
print(dim(train_data), dim(test_data))
print(dim(train_data))
print(dim(test_data))
print(dim(data))
train_data
library("e1071")
nb <- naiveBayes(train_data$income ~ train_data$age + train_data$sex + train_data$educ)
nb <- naiveBayes(income ~ age + sex + educ, train_data)
nb
test
test <- predict (nb, test_data)
test
confusionMatrix(test, test_data$income, positive = NULL, dnn = c("Prediction", "Reference"))
confusionMatrix(test, test_data$income, positive = NULL, dnn = c("Prediction", "Reference"))
confusionMatrix(test, test_data$income)
help(e1071)
help("e1071")
library("e1071")
confusionMatrix(test, test_data$income)
confusionMatrix()
example <- confusionMatrix(data=test, reference = test_data$income)
install.packages('caret')
library(caret)
example <- confusionMatrix(data=test, reference = test_data$income)
example <- confusionMatrix(data=flatten(test), reference = test_data$income)
example <- confusionMatrix(data=unlist(test), reference = test_data$income)
test
dim(test)
dim(test)
long(test)
length(test)
typeof(test)
typeof(test_data$income)
example <- confusionMatrix(data=unlist(test), reference = int(test_data$income))
example <- confusionMatrix(data=unlist(test), reference = as.numeric(test_data$income))
test_data$income
as.numeric(test_data$income)
test
confusionMatrix(test, test_data$income, dnn = c("Prediction", "Reference"))
test_data
test_data$income
typeof(data)
summary(data)
test_data
confusionMatrix(as.factor(test), test_data$income, dnn = c("Prediction", "Reference"))
as.factor(test_data$income)
confusionMatrix(test, as.factor(test_data$income), dnn = c("Prediction", "Reference"))
confusionMatrix(test, as.factor(test_data$income), dnn = c("Predicted", "Actual"))
nb
nb2 <- naiveBayes(sex ~ age + educ + income, train_data)
test2 <- predict (nb2, test_data)
confusionMatrix(test2, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
male <- train_data['sex' == 'M']
male
head(male)
male <- train_data[train_data['sex'] == "M"]
head(male)
male <- train_data[train_data$sex == "M",]
head(male)
female <- train_data[train_data$sex == "F",]
head(male)
head(female)
female <- train_data[train_data$sex == "F",]
dim(female)
dim(male)
dim(female)
male_random = male[sample(nrow(male), 3500), ]
head(male_random, 10)
dim(male_random)
head(male)
head(male_random)
head(male)
dim(male)
dim(female)
head(male)
female_random - female[sample(nrow(female), 3500),]
female_random = female[sample(nrow(female), 3500),]
dim(female_random)
dim(male_random)
train2 <- cbind(df1, df2)
train2 <- cbind(male_random, female_random)
dim(train2)
train2 <- rbind(male_random, female_random)
dim(train2)
nb_rand <- naiveBayes(sex ~ age + educ + income, train2)
```{r}
nb_rand
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
male_random = male[sample(nrow(male), 3500), ]
female_random = female[sample(nrow(female), 3500), ]
train2 <- rbind(male_random, female_random)
dim(train2)
nb_rand <- naiveBayes(sex ~ age + educ + income, train2)
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
male_random = male[sample(nrow(male), 3500), ]
female_random = female[sample(nrow(female), 3500), ]
train2 <- rbind(male_random, female_random)
dim(train2)
nb_rand <- naiveBayes(sex ~ age + educ + income, train2)
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
male_random = male[sample(nrow(male), 3500), ]
female_random = female[sample(nrow(female), 3500), ]
train2 <- rbind(male_random, female_random)
dim(train2)
nb_rand <- naiveBayes(sex ~ age + educ + income, train2)
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
male_random = male[sample(nrow(male), 3500), ]
male_random1 = male[sampe(nrow(male), 3500), ]
male_random = male[sample(nrow(male), 3500), ]
male_random1 = male[sample(nrow(male), 3500), ]
intersect(male_random, male_random1)
male_random = male[sample(nrow(male), 3500), ]
female_random = female[sample(nrow(female), 3500), ]
train2 <- rbind(male_random, female_random)
dim(train2)
nb_rand <- naiveBayes(sex ~ age + educ + income, train2)
test_rand <- predict (nb_rand, test_data)
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
nb_rand
confusionMatrix(test2, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
nb2
nb_rand
confusionMatrix(test2, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
summary(linr)
data <-read.csv("zeta.csv", header=TRUE)
head(data)
dim(data)
length(unique(data$meanhouseholdincome))
data_unique <- data[!duplicated(data$meanhouseholdincome), ]
dim(data_unique)
data_col <- data_unique[, -c(2,3)]
head(data_col)
data_without_out <- subset(data_col, data_col$meaneducation > 8 & data_col$meaneducation < 18 &
data_col$meanhouseholdincome > 10000 & data_col$meanhouseholdincome < 200000 &
data_col$meanemployment > 0 & data_col$meanemployment < 3 &
data_col$meanage > 20 & data_col$meanage < 60)
summary(data_without_out)
data_log <- data_without_out
data_log$meanhouseholdincome <- log10(data_log$meanhouseholdincome)
head(data_log)
names(data_log) <- c('X', 'age', 'education', 'employment', 'meanhouseholdincome')
head(data_log)
ggplot(data = data_log, aes(x=data_log$age, y = data_log$meanhouseholdincome)) + geom_point() + geom_hex() + ggtitle("Effect of age on log_income") + xlab("age") + ylab("log_income")
linr <- lm(data_log$meanhouseholdincome ~ data_log$age)
print(linr)
summary(linr)
ggplot(data = data_log, aes(x=data_log$education, y = data_log$meanhouseholdincome)) + geom_point() + geom_hex() + ggtitle("Effect of education on log_income") + xlab("education") + ylab("log_income")
summary(linr_mult)
plot(linr_mult)
ggplot(data_log, aes(data_log$meanhouseholdincome, linr_mult$fitted.values)) + geom_point() + geom_hex() + xlab("real") + ylab("predicted") + ggtitle("mult_reg") + geom_abline(slope=1, intercept = 0, colour="red")
confusionMatrix(test, as.factor(test_data$income), dnn = c("Predicted", "Actual"))
confusionMatrix(test2, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
nb2
nb_rand
confusionMatrix(test_rand, as.factor(test_data$sex), dnn = c("Predicted", "Actual"))
