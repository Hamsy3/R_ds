ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
library(ggplot2)
library(ggplot2)
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
```{r}
---
title: "lab2-3"
```{r}
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
lab1 <-read.table("zipIncome.txt", sep="|", header=TRUE)
head(lab1, n=10)
tail(lab1, n=10)
dim(lab1)
typeof(lab1)
class(lab1)
colnames(lab1) <- c("zipCode", "income")
head(lab1, n=10)
summary(lab1)
sd(lab1$income)
library(ggplot2)
ggplot(data = lab1, aes(x = zipCode, y = income)) + geom_point()
plot(lab1$zipCode, lab1$income, xlab = "zipCode", ylab="income")
outlier_lab <- lab1[lab1$income > 7000 & lab1$income < 200000, ]
summary(outlier_lab)
ggplot(data = outlier_lab, aes(x = zipCode, y = income, group = zipCode)) +
geom_boxplot() +
labs(title = "Average Household Income by Zip Code", x = "Zip Codes", y = "Income")
boxplot(outlier_lab$income ~ as.factor(outlier_lab$zipCode), main = "Average Household Income by Zip Code", xlab = "Zip Codes", ylab = "Income")
boxplot(outlier_lab$income ~ as.factor(outlier_lab$zipCode), main = "Average Household Income by Zip Code", xlab = "Zip Codes", ylab = "Income", log="y")
ggplot(data = outlier_lab, aes(x = zipCode, y = income)) +
geom_point(position = "jitter", alpha = 0.2) +
scale_y_log10() +
labs(title = "Scatter Plot of Log Income by Zip Code", x = "Zip Code", y = "Log Income")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
ggplot(data = outlier_lab, aes(x=as.factor(zipCode), y = income)) +
geom_point(aes(colour=factor(zipCode)), position="jitter", alpha=0.2) +
geom_boxplot(alpha=0.1, outlier.size=-Inf)+
scale_y_log10() +
labs(color="Region", x="Zip Code", y="Income", title="Average Income by Zip Code")
View(outlier_lab)
View(outlier_lab)
setwd("~/LAB05")
setwd("~/LAB03")
install.packages('arules')
install.packages('arulesViz')
library('arules')
library('arulesViz')
library('arules')
library('arulesViz')
library('arules')
library('arulesViz')
items <- read.transactions("AssociationRules.csv", rm.duplicates = FALSE, format = "basket", sep = " ", cols=NULL)
image(items)
```
library('arules')
library('arulesViz')
items <- read.transactions("AssociationRules.csv", rm.duplicates = FALSE, format = "basket", sep = " ", cols=NULL)
image(items)
summary(items)
summary(size(items))
## most frequent item13
size(items[10000])
rules <-apriori(items, parameter = list(supp = 0.01, conf = 0, target = "rules", maxlen = 25))
##11524
rules <-apriori(items, parameter = list(supp = 0.01, conf = 0.5, target = "rules", maxlen = 25))
plot(rules, control = list(jitter =0))
plot(rules, control = list(jitter =2))
plot(rules, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2))
subrules <- rules[quality(rules)$confidence > 0.8]
plot(subrules, control = list(jitter = 2))
inspect(subrules)
plot(rulestr, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
rulesLift <- tail(sort(rules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
```
rulesLift <- tail(sort(rules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
train <- head(items, 8000)
test <- tail(items, 2000)
rulestr <-apriori(train, parameter = list(supp = 0.01, conf = 0.5, target = "rules", maxlen = 25))
rulests <-apriori(test, parameter = list(supp = 0.01, conf = 0.5, target = "rules", maxlen = 25))
View(items)
summary(items)
library('arules')
library('arulesViz')
data <-read.transactions ("AssociationRules.csv",rm.duplicates = FALSE,format="basket",sep=" ",cols=NULL)
View(high)
View(outlier_lab)
library('arules')
library('arulesViz')
data <-read.transactions ("AssociationRules.csv",rm.duplicates = FALSE,format="basket",sep=" ",cols=NULL)
View(data)
head(data)
data@transactionInfo
data@transactionInfo
data@itemInfo
data@transactionInfo
image(data)
summary(items)
summary(data)
summary(size(items))
summary(size(data))
size(data[10000])
summary(size(data))
summary(data)
summary(data)
summary(data)
data@itemInfo
data <-read.transactions ("AssociationRules.csv",rm.duplicates = FALSE,format="basket",sep=" ",cols=NULL)
rules <-apriori(data, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
summary(rules)
count(rules)
size(rules)
rules <-apriori(data, parameter = list(supp = 0.01, conf = 50,target = "rules", maxlen=25))
rules <-apriori(data, parameter = list(supp = 0.01, conf = 0.5,target = "rules", maxlen=25))
rules <-apriori(data, parameter = list(supp = 0.01, conf = 0.5,target = "rules", maxlen=25))
rules <-apriori(data, parameter = list(supp = 0.01, conf = 0,target = "rules", maxlen=25))
plot(rules)
plot(rules, control = list(jitter =0))
plot(rules, control = list(jitter =0))
plot(rules)
plot(rules, control = list(jitter =0))
plot(rules)
plot(rules)
#plot(rules, control = list(jitter =0))
plot(rules)
plot(rules, control = list(jitter =0))
plot(rules, control = list(jitter =2))
plot(rules, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2))
plot(rules, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
subrules <- rules[quality(rules)$confidence > 0.8]
plot(subrules, control = list(jitter = 2))
inspect(subrules)
rulesLift <- tail(sort(rules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(max=2000, jitter=2), engine = 'plotly')
rulesLift <- tail(sort(rules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(rules, by = "lift"))
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(rules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
inspect(rulesLift)
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
```{r}
tail(sort(subrules, by = "lift"), 10)
tail(sort(subrules, by = "lift"), 10)
print(tail(sort(subrules, by = "lift"), 10))
print(tail(sort(subrules, by = "lift"), 10))
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
```
```{r}
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", control=list(jitter=2), engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
rulesLift1 <- sort(rules, decreasing = TRUE, na.last = NA, by = "lift")
inspect(tail(rulesLift1, 10))
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
rulesLift1 <- sort(rules, decreasing = TRUE, na.last = NA, by = "lift")
inspect(tail(rulesLift1, 10))
plot(rulesLift1, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
rulesLift1 <- sort(subrules, decreasing = TRUE, na.last = NA, by = "lift")
inspect(tail(rulesLift1, 10))
rulesLift <- tail(sort(subrules, by = "lift"), 10)
inspect(rulesLift)
plot(rulesLift1, method= "scatterplot", c("support","lift"), shading = "confidence", engine = 'plotly')
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
plot(srules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
plot(rules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence", recorded=False))
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence", recorded=False))
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence", recorded=FALSE))
plot(subrules, method = "matrix", measure = c("confidence","lift"), engine = "grid", shading = c("lift","confidence"))
inspect(subrules)
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
high <- head(sort(rules, by="lift"), 3)
inspect(high)
plot(high, method="graph", engine='igraph')
